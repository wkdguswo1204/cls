# day03

뷰처리
	
	MVC 패턴에서는 컨트롤러의 역할이 끝나면 뷰를 호출한다.
	컨트롤러는 자신이 만든 데이터(Model)를 이용해서 화면을 구성할 뷰를 선택해야 한다.
	
	스프링에서 뷰를 선택하는 방법
		1. 반환값을 String 으로 해서 뷰를 지정하는 방법
			(JSP 프로젝트에서 이용했던 원리와 동일하다.)
			
		2. 반환값을 void로 해서 뷰를 지정하는 방법
			==> 이렇게 하면 스프링은 자동적으로
				요청 내용을 이용해서 뷰를 지정하게 된다.
				
			예 ]
				http://localhost/cls/member/login.cls
				이렇게 요청했는데
				이요청을 처리할 함수의 반환값이 void 인 경우
				스프링은 자동적으로 요청 내용을 이용해서
				뷰를 지정한다.
				
					return "member/login";
				의 효과가 있게 되는 것이다.
				
				결국 뷰는
				/WEB-INF/views/member/login.jsp 
					<== prefix : /WEB-INF/views/
					<== suffix : .jsp
				를 보여주게 된다.
				
		참고 ]
			위의 두가지 방식으로 뷰를 지정하게 될 경우에는
			컨트롤러에서 만든 데이터를 뷰에 전달할 때
			리퀘스트 객체를 이용할 것이고
			우리가 JSP 프로젝트에서 사용했던 방식으로 뷰에 데이터를 전달하면 된다.
				==> req.setAttribute("키값", 데이터);
				
				
------------------------------------------------------------------------------------
	***
	3. 반환값을 ModelAndView 클래스 타입으로 지정하는 방법
		
		ModelAndView 클래스는 모델(데이터)과 뷰를 동시에 지정할 수 있는 특징을 가진
		클래스이다.
		
		장점 ]
			생산된 모델과 뷰를 한개의 클래스로 등록해서 사용할 수 있게 된다.
			
			
		실습 ]
			
			/WEB-INF/views/member/memberList.jsp 파일을 만들고
			==> 회원테이블에 저장된 이름과 회원번호를 조회해서 버튼을 만들고
				알고싶은 회원의 버튼을 클릭하면 해당 해원의 정보를 조회하는 페이지(/member/mameberDetail.jsp)로 이동하는
				기능 구현하세요.